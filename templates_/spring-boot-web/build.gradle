
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'

group = "${group}"
version = "${version}"

description = """Demo project for Spring Boot Web"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// In this section you declare where to find the dependencies of your project
repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    //compile 'org.springframework.boot:spring-boot-devtools'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.flywaydb:flyway-core:3.2.1'
    runtime 'org.postgresql:postgresql:42.1.4'

    // This dependency is found on compile classpath of this component and consumers.
    compile 'com.google.guava:guava:23.0'

    // Use the latest Groovy version for Spock testing
    testCompile 'org.codehaus.groovy:groovy-all:2.4.12'

    // Use the awesome Spock testing and specification framework even with Java
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'junit:junit:4.12'
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

jar {
    baseName = 'app'
    manifest {
      attributes 'Main-Class': "${group}.DemoApplication"
    }
}

// Docker config
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath('com.bmuschko:gradle-docker-plugin:3.0.8')
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.9.RELEASE")
    }
}

apply plugin: 'com.bmuschko.docker-remote-api'

task createDockerImage(type: DockerBuildImage) {
    inputDir = file('.')
    tags = ["${artifact}-docker"]
}

build.finalizedBy(createDockerImage)